return (ate)
}
#calculate implied one tailed probability using 10,000 replications
distribution.under.sharp.null <- replicate(10000,ate_calc(randomize.blocked(),po.all))
p_value_one_tail <- mean(ate<=distribution.under.sharp.null)
p_value_one_tail
#create distribution and plot
ate_calc <- function(treat,po){
ate <- mean(po[treat==1])-mean(po[treat==0])
return (ate)
}
#calculate implied one tailed probability using 10,000 replications
distribution.under.sharp.null <- replicate(10000,ate_calc(randomize.blocked(),po.all))
p_value_one_tail <- mean(ate<=distribution.under.sharp.null)
distribution.under.sharp.null <- replicate(10000,ate_calc(randomize.blocked(),po.all))
p_value_one_tail <- mean(ate.overall<=distribution.under.sharp.null)
p_value_one_tail
#create distribution and plot
distribution.under.sharp.null <- replicate(10000,ate_calc(randomize.blocked(),po.all))
p_value_one_tail <- mean(ate.overall<=distribution.under.sharp.null)
p_value_one_tail
distribution.under.sharp.null <- replicate(10000,ate_calc(randomize.blocked(),po.all))
p_value_one_tail <- mean(ate.overall>=distribution.under.sharp.null)
p_value_one_tail
distribution.under.sharp.null <- replicate(10000,ate_calc(randomize.blocked(),po.all))
p_value_one_tail <- mean(ate.overall>=distribution.under.sharp.null)
p_value_one_tail
plot(density(distribution.under.sharp.null))
abline(v=ate.overall)
ate_calc <- function(treat,po){
ate <- mean(po[treat==1])-mean(po[treat==0])
return (ate)
}
#calculate implied one tailed probability using 10,000 replications
distribution.under.sharp.null <- replicate(10000,ate_calc(randomize.blocked(),po.all))
p_value_one_tail <- mean(ate.overall>=distribution.under.sharp.null)
p_value_one_tail
ate_calc <- function(treat,po){
ate <- mean(po[treat==1])-mean(po[treat==0])
return (ate)
}
#calculate implied one tailed probability using 10,000 replications
distribution.under.sharp.null <- replicate(10000,ate_calc(randomize.blocked(),po.all))
p_value_two_tail <- mean(ate.overall>=distribution.under.sharp.null)
p_value_two_tail
#create distribution and plot
distribution.under.sharp.null <- replicate(10000,ate_calc(randomize.blocked(),po.all))
p_value_two_tail <- mean(abs(ate.overall)>=distribution.under.sharp.null)
p_value_two_tail
#create distribution and plot
#function for estimating ATE
ate_calc <- function(treat,po){
ate <- mean(po[treat==1])-mean(po[treat==0])
return (ate)
}
#calculate implied one tailed probability using 10,000 replications
distribution.under.sharp.null <- replicate(10000,ate_calc(randomize.blocked(),po.all))
p_value_two_tail <- mean(abs(ate.overall)>=distribution.under.sharp.null)
p_value_two_tail
distribution.under.sharp.null <- replicate(10000,ate_calc(randomize.blocked(),po.all))
p_value_two_tail <- mean(abs(ate.overall)<=distribution.under.sharp.null)
p_value_two_tail
#create distribution and plot
p_value_two_tail <- mean(abs(ate.overall)<=distribution.under.sharp.null)
p_value_two_tail
#create distribution and plot
plot(density(distribution.under.sharp.null))
p_value_two_tail <- mean(ate.overall>=abs(distribution.under.sharp.null)
p_value_two_tail
#create distribution and plot
distribution.under.sharp.null <- replicate(10000,ate_calc(randomize.blocked(),po.all))
p_value_two_tail <- mean(abs(ate.overall)<=distribution.under.sharp.null)
p_value_two_tail
#calculate implied two-tailed probability using 10,000 replications
distribution.under.sharp.null <- replicate(10000,ate_calc(randomize.blocked(),po.all))
p_value_two_tail <- mean(abs(ate.overall)<=distribution.under.sharp.null)
p_value_two_tail
#calculate implied two-tailed probability using 10,000 replications
distribution.under.sharp.null <- replicate(10000,ate_calc(randomize.blocked(),po.all))
p_value_two_tail <- mean(abs(ate.overall)<=distribution.under.sharp.null)
p_value_two_tail
#generate four histograms
#calculate implied two-tailed probability using 10,000 replications
distribution.under.sharp.null <- replicate(10000,ate_calc(randomize.blocked(),po.all))
p_value_two_tail <- mean(abs(ate.overall)<=distribution.under.sharp.null)
p_value_two_tail
#generate four histograms
setwd("~/Dropbox/Berkeley/W241_FE/Project/wine_experiment")
data <- read.csv("Data_Collection - R_data.csv")
data <- data[complete.cases(data),]
#ignore cluster error adjustments for now
lm_cheap <- lm(rating_cheap ~ treatment + quiz_score + zip_code + age + gender + group, data=data)
lm_medium <- lm(rating_medium ~ treatment + quiz_score + zip_code + age + gender + group, data=data)
lm_expensive <- lm(rating_expensive ~ treatment + quiz_score + zip_code + age + gender + group, data=data)
lm_cheap <- lm(rating_cheap ~ treatment, data=data)
# Model with all price points and heterogeneous treatment effects, cheap = base-level factor
# Raw treatment coefficient represents treatment effect for the cheap wine
# Not fully saturated, but we might want to consider adding interaction terms for geneder etc.
# in case there are other heterogeneous effects
# We'll need to melt data and restructure so each wine rating is its own record
lm.all <- lm(rating_all ~ treatment + quiz_score + zip_code
+ age + gender + group + mid_dummy + expensive_dummy
+ (mid_dummy * treatment) + (expensive_dummy * treatment), data=data)
summary(lm.all)
lm.all <- lm(rating_all ~ treatment + quiz_score + zip_code
+ age + gender + group + mid_dummy + expensive_dummy
+ (mid_dummy * treatment) + (expensive_dummy * treatment), data=data)
View(data)
View(data)
# data = pilot
library(reshape)
options("scipen"=100)
wines <- pilot[,c(1,7:9,23:25)]
melted <- melt(wines)
melted$wine[melted$variable == "rating_wine1"] <- melted$wine1[melted$variable == "rating_wine1"]
melted$wine[melted$variable == "rating_wine2"] <- melted$wine2[melted$variable == "rating_wine2"]
melted$wine[melted$variable == "rating_wine3"] <- melted$wine3[melted$variable == "rating_wine3"]
melted.merged <- merge(melted, pilot)
View(melted.merged)
# Quick analysis
# data = pilot
library(reshape)
install.packages("reshape")
library(reshape)
options("scipen"=100)
wines <- pilot[,c(1,7:9,23:25)]
assignment <- c(rep(1,2), rep(0,2))
assignment.random <- sample(assignment, 4)
names <- c("Tyler", "Tony", "Vedant")
df <- cbind(names, assignment.random)
View(df)
# Standard Deviation  of scores from pilot
standard.dev <- .9
# Vector of potential effect sizes
effects <- seq(.1, 1, by=.01)
#Power calcs for t.test for all possible effect sizes
# We'll use regression, of course, which means
# our estimate will actually have more power, thanks to covariates
power.dist <- power.t.test(n= 30, delta = effects, sd = standard.dev, sig.level = .05, power = NULL)
#Plots
plot(effects, power.dist$power)
abline(h = .8, col = "red")
pilot <- read.csv("Data_Collection - R_data.csv")
# data = pilot
#install.packages("reshape")
library(reshape)
options("scipen"=100)
wines <- pilot[,c(1,7:9,23:25)]
melted <- melt(wines)
melted$wine[melted$variable == "rating_wine1"] <- melted$wine1[melted$variable == "rating_wine1"]
melted$wine[melted$variable == "rating_wine2"] <- melted$wine2[melted$variable == "rating_wine2"]
melted$wine[melted$variable == "rating_wine3"] <- melted$wine3[melted$variable == "rating_wine3"]
melted <- melt(wines)
wines <- pilot[,c(1,7:9,23:25)]
View(pilot)
View(pilot)
?melt
wines <- pilot[,c(1,7:9,23:25)]
View(pilot)
View(pilot)
pilot <- read.csv("Data_Collection_Pilot - R_data.csv")
# data = pilot
#install.packages("reshape")
library(reshape)
options("scipen"=100)
melted <- melt(wines)
wines <- read.csv("Data_Collection_Pilot - R_data.csv")
melted <- melt(wines)
melted$wine[melted$variable == "rating_wine1"] <- melted$wine1[melted$variable == "rating_wine1"]
melted$wine[melted$variable == "rating_wine2"] <- melted$wine2[melted$variable == "rating_wine2"]
melted$wine[melted$variable == "rating_wine3"] <- melted$wine3[melted$variable == "rating_wine3"]
melted.merged <- merge(melted, pilot)
View(melted.merged)
melted$variable == "rating_wine1"
wines <- read.csv("Data_Collection_Pilot - R_data.csv")
options("scipen"=100)
# wines <- pilot[,c(1,7:9,23:25)]
melted <- melt(wines)
melted <- melt(wines, id="name")
melted <- melt(wines, id="id")
melted
melted <- melt(wines, id="id","group")
melted
melted <- melt(wines)
melted
melted
melted <- melt(wines)
melted
wines <- read.csv("Data_Collection_Pilot - R_data.csv")
wines
wines <- read.csv("Data_Collection_Pilot - R_data.csv")
options("scipen"=100)
wines
melted <- melt(wines)
melted
melted <- melt(wines,id="id")
melted
melted <- melt(wines)
melted
melted$wine[melted$variable == "rating_wine1"] <- melted$wine1[melted$variable == "rating_wine1"]
melted$wine[melted$variable == "rating_wine2"] <- melted$wine2[melted$variable == "rating_wine2"]
melted$wine[melted$variable == "rating_wine3"] <- melted$wine3[melted$variable == "rating_wine3"]
melted.merged <- merge(melted, pilot)
View(melted.merged)
melted <- melt(wines)
melted
library(reshape2)
wines <- read.csv("Data_Collection_Pilot - R_data.csv")
options("scipen"=100)
# wines <- pilot[,c(1,7:9,23:25)]
melted <- melt(wines)
melted
?melt
wines <- read.csv("Data_Collection_Pilot - R_data.csv")
melted <- melt(data,id.var="rating")
data <- read.csv("Data_Collection_Pilot - R_data.csv")
options("scipen"=100)
melted <- melt(data,id.var="rating")
View(data)
View(data)
melted <- melt(data,id.var=c("id","group","treatment","quiz_score","zip_code","age","gender","...other.covariates..."))
melted
melted
melted <- melt(data,id.var=c("id","group","treatment","quiz_score","zip_code","age","gender","...other.covariates..."),
variable.name = "wine_type",
variable.value = "rating"
)
melted
melted <- melt(data,id.var=c("id","group","treatment","quiz_score","zip_code","age","gender","...other.covariates..."),
variable.name = "wine_type",
variable.value = "rating"
)
melted
melted <- melt(data,id.var=c("id","group","treatment","quiz_score","zip_code","age","gender","...other.covariates..."),
measure.name = "wine_type",
measure.value = "rating"
)
melted
melted <- melt(data,id.var=c("id","group","treatment","quiz_score","zip_code","age","gender","...other.covariates..."),
variable.name = "wine_type",
valuelname = "rating"
)
melted
melted <- melt(data,id.var=c("id","group","treatment","quiz_score","zip_code","age","gender","...other.covariates..."),
variable.name = "wine_type",
value.name = "rating"
)
melted
melted <- melt(data,id.vars=c("id","group","treatment","quiz_score","zip_code","age","gender","...other.covariates..."),
variable.name = "wine_type",
value.name = "rating"
)
melted
?melt
melted <- melt(data,id.vars=c("id","group","treatment","quiz_score","zip_code","age","gender","...other.covariates..."),
variable_name = "wine_type",
value.name = "rating"
)
melted
melted <- melt(data,id.vars=c("id","group","treatment","quiz_score","zip_code","age","gender","...other.covariates..."),
variable_name = "wine_type",
value_name = "rating"
)
melted
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
data <- read.csv("Data_Collection_Pilot - R_data.csv")
options("scipen"=100)
?melt
melted <- melt(data,id.vars=c("id","group","treatment","quiz_score","zip_code","age","gender","...other.covariates..."),
variable.name = "wine_type",
value.name = "rating"
)
melted
data.melted <- melt(data,id.vars=c("id","group","treatment","quiz_score","zip_code","age","gender","...other.covariates..."),
variable.name = "wine_type",
value.name = "rating"
)
data.melted
data.melted$wine_type
data.melted[data.melted$wine_type=="rating_wine1"]
data.melted[data.melted$wine_type=="rating_wine1",]
data.melted[data.melted$wine_type=="rating_expensive",]
data.melted$wine_type[data.melted$wine_type=="rating_expensive",]
data.melted[data.melted$wine_type=="rating_expensive",]
data.melted[data.melted$wine_type=="rating_expensive","wine_type"]
data.melted[data.melted$wine_type=="rating_expensive","wine_type"] = "expensive_wine"
data.melted
data.melted <- melt(data,id.vars=c("id","group","treatment","quiz_score","zip_code","age","gender","...other.covariates..."),
variable.name = "wine_type",
value.name = "rating"
)
data.melted
data.melted$wine_type[data.melted$wine_type=="rating_expensive"]
library(plyr)
revalue(data.melted, c("rating_cheap"="cheap", "rating_medium"="medium", "rating_medium"="expensive"))
data.melted <- melt(data,id.vars=c("id","group","treatment","quiz_score","zip_code","age","gender","...other.covariates..."),
variable.name = "wine_type",
value.name = "rating"
)
revalue(data.melted, c("rating_cheap"="cheap", "rating_medium"="medium", "rating_medium"="expensive"))
data.melted.factor
revalue(data.melted, c("rating_cheap"="cheap", "rating_medium"="medium", "rating_medium"="expensive"))
revalue(data.melted, c("rating_cheap"="cheap", "rating_medium"="medium", "rating_medium"="expensive"))
data.melted <- melt(data,id.vars=c("id","group","treatment","quiz_score","zip_code","age","gender","...other.covariates..."),
variable.name = "wine_type",
value.name = "rating"
)
revalue(data.melted, c("rating_cheap"="cheap", "rating_medium"="medium", "rating_medium"="expensive"))
data.melted
summary(data.melted)
summary(data.melted)
revalue(data.melted, c("rating_cheap"="cheap", "rating_medium"="medium", "rating_expensive"="expensive"))
levels(data.melted)
levels(data.melted$rating_cheap)
levels(data.melted$wine_type)
revalue(levels(data.melted$wine_type), c("rating_cheap"="cheap", "rating_medium"="medium", "rating_expensive"="expensive"))
data.melted
levels(data.melted$wine_type)
levels(data.melted$wine_type)
revalue(levels(data.melted$wine_type), c("rating_cheap"="cheap", "rating_medium"="medium", "rating_expensive"="expensive"))
levels(data.melted$wine_type)
data.melted$wine_type[data.melted$wine_type==rating_expensive]
data.melted$wine_type[data.melted$wine_type==rating_expensive]
data.melted$wine_type[data.melted$wine_type==rating_expensive]
data.melted$wine_type[data.melted$wine_type=="rating_expensive"]
data.melted$wine_type[data.melted$wine_type=="rating_expensive"] = "expensive"
levels(data.melted$wine_type)[match("rating_expensive",levels(data.melted$wine_type))] <- "expensive"
melted
levels(data.melted)
levels(data.melted$wine_type)
levels(data.melted$wine_type)[match("rating_cheap",levels(data.melted$wine_type))] <- "cheap"
levels(data.melted$wine_type)[match("rating_medium",levels(data.melted$wine_type))] <- "medium"
levels(data.melted$wine_type)[match("rating_expensive",levels(data.melted$wine_type))] <- "expensive"
data.melted$wine_type[data.melted$wine_type=="rating_expensive"] = "expensive"
data.melted
data.melted <- melt(data,id.vars=c("id","group","treatment","quiz_score","zip_code","age","gender","...other.covariates..."),
variable.name = "wine_type",
value.name = "rating"
)
data.melted
levels(data.melted$wine_type)[match("rating_cheap",levels(data.melted$wine_type))] <- "cheap"
levels(data.melted$wine_type)[match("rating_medium",levels(data.melted$wine_type))] <- "medium"
levels(data.melted$wine_type)[match("rating_expensive",levels(data.melted$wine_type))] <- "expensive"
data.melted
data.melted.lm <- lm(value ~ treatment + wine_type + (treatment * wine_type), data = melted.merged)
data.melted.lm <- lm(value ~ treatment + wine_type + (treatment * wine_type), data = melted)
summary(wine.lm)
data.melted.lm <- lm(rating ~ treatment + wine_type + (treatment * wine_type), data = melted)
summary(wine.lm)
data.melted.lm <- lm(rating ~ treatment + wine_type + (treatment * wine_type), data = melted)
summary(data.melted.lm)
data.melted.lm <- lm(rating ~ treatment + wine_type + (treatment * wine_type), data = data.melted)
summary(data.melted.lm)
data.melted
data.melted.lm <- lm(rating ~ treatment + wine_type + (treatment * wine_type), data = data.melted)
summary(data.melted.lm)
library(reshape2)
data <- read.csv("Data_Collection_Pilot - R_data.csv")
options("scipen"=100)
# melt data so that each rating is treated as individual data point (ie. individual row)
data.melted <- melt(data,id.vars=c("id","group","treatment","quiz_score","zip_code","age","gender","...other.covariates..."),
variable.name = "wine",
value.name = "rating"
)
#convert wine_type name to cheap, medium, and expensive by re-naming the factors
levels(data.melted$wine)[match("rating_cheap",levels(data.melted$wine))] <- "cheap"
levels(data.melted$wine)[match("rating_medium",levels(data.melted$wine))] <- "medium"
levels(data.melted$wine)[match("rating_expensive",levels(data.melted$wine))] <- "expensive"
#
# melted$wine[melted$variable == "rating_wine1"] <- melted$wine1[melted$variable == "rating_wine1"]
# melted$wine[melted$variable == "rating_wine2"] <- melted$wine2[melted$variable == "rating_wine2"]
# melted$wine[melted$variable == "rating_wine3"] <- melted$wine3[melted$variable == "rating_wine3"]
# melted.merged <- merge(melted, pilot)
# View(melted.merged)
data.melted
# Quick analysis
data.melted.lm <- lm(rating ~ treatment + wine + (treatment * wine), data = data.melted)
summary(data.melted.lm)
aggregate(value ~ wine, FUN=mean, data = data.melted)
aggregate(rating ~ wine, FUN=mean, data = data.melted)
aggregate(rating ~ treatment, FUN=mean, data = data.melted)
data.melted.lm <- lm(rating ~ treatment + wine + (treatment * wine) + quiz_score + zip_code + age + gender, data = data.melted)
data.melted.lm <- lm(rating ~ treatment + wine + (treatment * wine) + quiz_score + age + gender, data = data.melted)
summary(data.melted.lm)
library(reshape2)
data <- read.csv("Data_Collection_Test - R_data.csv")
# data <- read.csv("Data_Collection_Pilot - R_data.csv")
options("scipen"=100)
# melt data so that each rating is treated as individual data point (ie. individual row)
data.melted <- melt(data,id.vars=c("id","group","treatment","quiz_score","zip_code","age","gender"),
setwd("~/Dropbox/Berkeley/W241_FE/Project/wine_experiment/Arthur")
#working analysis file by Arthur
#install.packages("reshape")
library(reshape2)
data <- read.csv("Data_Collection_Test - R_data.csv")
# data <- read.csv("Data_Collection_Pilot - R_data.csv")
options("scipen"=100)
# melt data so that each rating is treated as individual data point (ie. individual row)
library(reshape2)
data <- read.csv("Data_Collection_Test - R_data.csv")
#install.packages("reshape")
data <- read.csv("Data_Collection_Pilot - R_data.csv")
setwd("~/Dropbox/Berkeley/W241_FE/Project/wine_experiment/Arthur")
library(reshape2)
data <- read.csv("Data_Collection_Test - R_data.csv")
# data <- read.csv("Data_Collection_Pilot - R_data.csv")
options("scipen"=100)
# melt data so that each rating is treated as individual data point (ie. individual row)
data.melted <- melt(data,id.vars=c("id","group","treatment","quiz_score","zip_code","age","gender"),
variable.name = "wine",
value.name = "rating"
)
#convert wine_type name to cheap, medium, and expensive by re-naming the factors
levels(data.melted$wine)[match("rating_cheap",levels(data.melted$wine))] <- "cheap"
levels(data.melted$wine)[match("rating_medium",levels(data.melted$wine))] <- "medium"
levels(data.melted$wine)[match("rating_expensive",levels(data.melted$wine))] <- "expensive"
# Standard Regression
data.melted.lm <- lm(rating ~ treatment + wine + (treatment * wine), data = data.melted)
summary(data.melted.lm)
library(reshape2)
data <- read.csv("Data_Collection_Test - R_data.csv")
# data <- read.csv("Data_Collection_Pilot - R_data.csv")
# options("scipen"=100)
# melt data so that each rating is treated as individual data point (ie. individual row)
data.melted <- melt(data,id.vars=c("id","group","treatment","quiz_score","zip_code","age","gender"),
variable.name = "wine",
value.name = "rating"
)
#convert wine_type name to cheap, medium, and expensive by re-naming the factors
levels(data.melted$wine)[match("rating_cheap",levels(data.melted$wine))] <- "cheap"
levels(data.melted$wine)[match("rating_medium",levels(data.melted$wine))] <- "medium"
levels(data.melted$wine)[match("rating_expensive",levels(data.melted$wine))] <- "expensive"
# Standard Regression
data.melted.lm <- lm(rating ~ treatment + wine + (treatment * wine), data = data.melted)
summary(data.melted.lm)
data.melted.lm <- lm(rating ~ treatment + wine + (treatment * wine), data = data.melted)
data.melted.lm <- lm(rating ~ treatment + wine + (treatment * wine) + group + quiz_score + zip_code + age + gender, data = data.melted)
summary(data.melted.lm)
data.melted.lm <- lm(rating ~ treatment + wine + (treatment * wine), data = data.melted)
summary(data.melted.lm)
data.melted.lm <- lm(rating ~ treatment + wine + (treatment * wine), data = data.melted)
summary(data.melted.lm)
# Adding HTEs
# Standard Regression
data.melted.lm <- lm(rating ~ treatment + wine + (treatment * wine), data = data.melted)
library(reshape2)
data <- read.csv("Data_Collection_Test - R_data.csv")
# data <- read.csv("Data_Collection_Pilot - R_data.csv")
# options("scipen"=100)
# melt data so that each rating is treated as individual data point (ie. individual row)
data.melted <- melt(data,id.vars=c("id","group","treatment","quiz_score","zip_code","age","gender"),
variable.name = "wine",
value.name = "rating"
)
#convert wine_type name to cheap, medium, and expensive by re-naming the factors
levels(data.melted$wine)[match("rating_cheap",levels(data.melted$wine))] <- "cheap"
levels(data.melted$wine)[match("rating_medium",levels(data.melted$wine))] <- "medium"
levels(data.melted$wine)[match("rating_expensive",levels(data.melted$wine))] <- "expensive"
# Standard Regression
data.melted.lm <- lm(rating ~ treatment + wine + (treatment * wine), data = data.melted)
summary(data.melted.lm)
# Adding HTEs
data.melted.lm.hte <- lm(rating ~ treatment + wine + (treatment * wine) + group + quiz_score + zip_code + age + gender, data = data.melted)
summary(data.melted.lm.hte)
library(reshape2)
data <- read.csv("Data_Collection_Test - R_data.csv")
# data <- read.csv("Data_Collection_Pilot - R_data.csv")
# options("scipen"=100)
# melt data so that each rating is treated as individual data point (ie. individual row)
data.melted <- melt(data,id.vars=c("id","group","treatment","quiz_score","zip_code","age","gender"),
variable.name = "wine",
value.name = "rating"
)
#convert wine_type name to cheap, medium, and expensive by re-naming the factors
levels(data.melted$wine)[match("rating_cheap",levels(data.melted$wine))] <- "cheap"
levels(data.melted$wine)[match("rating_medium",levels(data.melted$wine))] <- "medium"
levels(data.melted$wine)[match("rating_expensive",levels(data.melted$wine))] <- "expensive"
# Standard Regression
data.melted.lm <- lm(rating ~ treatment + wine + (treatment * wine), data = data.melted)
summary(data.melted.lm)
# Adding HTEs
data.melted.lm.hte <- lm(rating ~ treatment + wine + (treatment * wine) + group + quiz_score + zip_code + age + gender, data = data.melted)
summary(data.melted.lm.hte)
# Mean of rating per wine type or treatment subgroups
aggregate(rating ~ wine, FUN=mean, data = data.melted)
aggregate(rating ~ treatment, FUN=mean, data = data.melted)
setwd("~/Dropbox/Berkeley/W241_FE/Project/wine_experiment/Arthur")
library(reshape2)
data <- read.csv("Data_Collection_Test - R_data.csv")
data <- read.csv("Data_Collection_RealDeal - R_data.csv")
data.melted <- melt(data,
id.vars=c("id","group","treatment","quiz_score","zip_code","age","gender","wine_pref","wine_type"),
variable.name = "wine",
value.name = "rating")
data.melted <- melt(data,
id.vars=c("id","group","treatment","quiz_score","zip_code","age","gender","wine_pref","wine_type","wine_color"),
variable.name = "wine",
value.name = "rating")
View(data.melted)
#convert wine_type name to cheap, medium, and expensive by re-naming the factors
levels(data.melted$wine)[match("rating_cheap",levels(data.melted$wine))] <- "cheap"
levels(data.melted$wine)[match("rating_medium",levels(data.melted$wine))] <- "medium"
levels(data.melted$wine)[match("rating_expensive",levels(data.melted$wine))] <- "expensive"
View(data.melted)
View(data.melted)
data.melted$gender[data.melted$gender == "F "] <- "F"        #fix error of gender typo
data.melted$wine_color[data.melted$wine_color == ""] <- NA   #fix empty input for wine_color
data.melted$wine <- relevel(as.factor(data.melted$wine), ref = "expensive") # make expensive wine ref level
data.melted <- subset(melted.merged, melted.merged$name != "B Rose") #eliminate "B Rose" as rating is all 1's
wine.lm <- lm(value ~ treatment * wine + gender + quiz_score + wine_color, data = data.melted)
